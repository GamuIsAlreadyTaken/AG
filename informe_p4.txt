Autores: 
	Noelia Serrano Abraldes - noelia.serrano
	Victor Diez Ruiz - v.druiz
	Ismael Miguez Valero - i.miguezv

Para la realización de la tercera practica (P4) nos propone calcular el camino mínimo 
de los vértices de un grafo completo ponderado mediante el algoritmo de Dijkstra.
El grafo se representa mediante su matriz de adyacencia generada de manera aleatoria.

Las medidas están realizadas en microsegundos. Si la medida del tiempo de ejecución 
es menor a 500 microsegundos se realiza automáticamente un bucle de 1000 iteraciones del 
algoritmo a analizar y se calcula la media de los tiempos. De ser así se indicará con '(*)' 
en la tabla.

Todo esto se realiza en tres maquinas diferentes y los mejores resultados obtenidos, 
reflejados en este informe,se consiguieron en una maquina con las siguientes características:

        LENOVO ideapad 330
        Procesador Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz
        Memoria RAM 8 Gb 2133 MHz DDR4 Síncrono

COMPROBACION ALGORITMO DE DIJKSTRA
Input:
 0  1  8  4  7
 1  0  2  6  5
 8  2  0  9  5
 4  6  9  0  3
 7  5  5  3  0
Target:
 0  1  3  4  6
 1  0  2  5  5
 3  2  0  7  5
 4  5  7  0  3
 6  5  5  3  0
Result:
 0  1  3  4  6
 1  0  2  5  5
 3  2  0  7  5
 4  5  7  0  3
 6  5  5  3  0

Input:
 0  1  4  7
 1  0  2  8
 4  2  0  3
 7  8  3  0
Target:
 0  1  3  6
 1  0  2  5
 3  2  0  3
 6  5  3  0
Result:
 0  1  3  6
 1  0  2  5
 3  2  0  3
 6  5  3  0



MEDICIONES:

Unidades de las medidas de tiempo:
- µs (microsegundos)

# ALGORITMO DE DIJKSTRA

[Tabla]
           n           t(n)	     t(n)/n^2.8	     t(n)/n^2.9	       t(n)/n^3
 (*)      16      113.60900	      0.0482922	      0.0365986	      0.0277366
          32      727.00000	      0.0443726	      0.0313761	      0.0221863
          64     4657.00000	      0.0408134	      0.0266268	      0.0177650
         128    31321.00000	      0.0394137	      0.0247620	      0.0149350
         256   231550.00000	      0.0418382	      0.0246297	      0.0138015
         512  1788728.00000	      0.0464075	      0.0248692	      0.0133271
        1024 14342929.00000	      0.0534316	      0.0263158	      0.0133579

- Cotas: < n^2.8, n^2.9, n^3 >

 	- Cota subestimada  : f(n) = n^2.8
 	- Cota ajustada     : g(n) = n^2.9 
 	- Cota sobrestimada : h(n) = n^3

- t(n) / f(n) cuando n -> infinito ---> infinito (divergente)
- t(n) / g(n) cuando n -> infinito ---> Valor constante = [~0.025]
- t(n) / h(n) cuando n -> infinito ---> 0 (convergente)

+ [Anomalias]


CONCLUSIÓN:
Tras analizar las diferentes partes del algoritmo y obtener 
empíricamente los tiempos podemos ver que:

Al necesitar tanto espacio en memoria, los procesos internos del 
sistema operativo afectan mucho a los resultados, haciendo que las 
mediciones sean volatiles, cuanto mas grande, o mas veces se repitan,
las mediciones mas posible es que los procesos internos del sistema 
interfieran con las mediciones inflando los tiempos.
