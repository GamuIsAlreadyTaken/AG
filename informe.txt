Autores: 
	Noelia Serrano Abraldes - noelia.serrano
	Victor Diez Ruiz - v.druiz
	Ismael Miguez Valero - i.miguezv

En la P1 nos piden la suma de la subsecuencia maxima y para realizarlo hemos desarrollado dos algoritmos, uno lineal y el otro cuadrático. En los cuales aplicaremos distintos vectores aleatorios a partir de los resultados estudiaremos la complejidad computacional.

Todo esto lo realizamos en una m‡quina con las siguientes características: 

MacBook Air (13-inch, 2017)
Procesador 1,8 GHz Intel Core i5 de doble núcleo
Memoria 8 GB 1600 MHz DDR3

Las unidades de tiempo medidas en microsegundos [µs] son las siguientes: 


$ ./p1
    n           t(n)	     t(n)/n^1.8	       t(n)/n^2	     t(n)/n^2.2
  500      559.00000	      0.0077494	      0.0022360	      0.0006452
 1000     2017.00000	      0.0080298	      0.0020170	      0.0005066
 2000     5379.00000	      0.0061496	      0.0013448	      0.0002941
 4000    21775.00000	      0.0071491	      0.0013609	      0.0002591
 8000    84498.00000	      0.0079668	      0.0013203	      0.0002188
16000   337273.00000	      0.0091320	      0.0013175	      0.0001901
32000  1349742.00000	      0.0104950	      0.0013181	      0.0001655

Cotas: <n^1.8, n^2, n^2.2>
	- Cota subestimada: f(n) = n^1.8
	- Cota ajustada: g(n) = n^2 
	- Cota sobreestimada: h(n) = n ^2.2

$ ./p1
    n           t(n)	    t(n)/log(n)	         t(n)/n	  t(n)/n*log(n)
  500        2.18800	      0.3520737	      0.0043760	      0.0007041
 1000        3.75700	      0.5438815	      0.0037570	      0.0005439
 2000        7.44800	      0.9798836	      0.0037240	      0.0004899
 4000       12.62900	      1.5226579	      0.0031572	      0.0003807
 8000       24.15800	      2.6880462	      0.0030198	      0.0003360
16000       46.51100	      4.8046846	      0.0029069	      0.0003003
32000       89.79800	      8.6564878	      0.0028062	      0.0002705

Cotas: <log(n), n, n*log(n)>
	- Cota subestimada: f(n) = log(n)
	- Cota ajustada: g(n) = n
	- Cota sobreestimada: h(n) = n*log(n)


Conclusiones: 
El tiempo necesario de cálculo del primer algoritmo es mucho mayor que en el segundo debido a la complejidad del bucle de que se realiza para su cálculo tal y como se podía intuir ya que el primero es un algoritmo cuadrático mientras que el segundo tiene una complejidad lineal. 
