Autores: 
	Noelia Serrano Abraldes - noelia.serrano
	Victor Diez Ruiz - v.druiz
	Ismael Miguez Valero - i.miguezv

Para la realización de la tercera practica (P2) nos propone el análisis de algoritmos de ordenación de un
vector dependiendo del orden inicial de este. Los casos analizados son:
        - Vector ordenado ascendentemente
        - vector ordenado descendentemente
        - Vector ordenado aleatoriamente
Para ello se contemplan dos tipos de algoritmos:
        -Ordenación por inserción
        -Ordenación shell.
Las medidas están realizadas en microsegundos. Si la medida del tiempo de ejecución es menor a
500 microsegundos se realiza automáticamente un bucle de 1000 iteraciones del algoritmo a analizar
y se calcula la media de los tiempos tardados. En este caso se indicará con '*' en la tabla.

Todo esto se realiza en tres maquinas diferentes y los mejores resultados obtenidos, reflejados en este
informe,se consiguieron en una maquina con las siguientes caracteristicas:

        MacBook Air (13-inch, 2017)
        Procesador 1,8 GHz Intel Core i5 de doble núcleo
        Memoria 8 GB 1600 MHz DDR3

MEDICIONES:

Target:	[  1  2  3  4  5  6  7  8  9 ]
Input:	[  9  8  7  6  5  4  3  2  1 ]
Heap:	[  1  2  3  6  5  4  7  8  9 ]
Output:	[  1  2  3  6  5  4  7  8  9 ]
Crear monticulo
    n           t(n)	     t(n)/n^0.8	         t(n)/n	     t(n)/n^1.2
  500       11.15700	      0.0773342	      0.0223140	      0.0064385
 1000       19.83100	      0.0789486	      0.0198310	      0.0049813
 2000       32.36100	      0.0739942	      0.0161805	      0.0035382
 4000       64.28300	      0.0844205	      0.0160708	      0.0030593
 8000      128.98100	      0.0972868	      0.0161226	      0.0026719
16000      255.07900	      0.1105042	      0.0159424	      0.0023000
32000      545.00000	      0.1356053	      0.0170313	      0.0021390
64000     1045.00000	      0.1493387	      0.0163281	      0.0017853
128000     2055.00000	      0.1686723	      0.0160547	      0.0015281
256000     4128.00000	      0.1946022	      0.0161250	      0.0013361


 Unidades de las medidas de tiempo:
 * µs (microsegundos)

    # ORDENACIÓN POR MONTICULO. INICIALIZACIÓN ASCENDENTE :

            n           t(n)	         t(n)/n	   t(n)/n log n	     t(n)/n^1.2
          500       33.52300	      0.0670460	      0.0107885	      0.0193455
         1000       79.36600	      0.0793660	      0.0114894	      0.0199358
         2000      188.04700	      0.0940235	      0.0123700	      0.0205603
         4000      402.65400	      0.1006635	      0.0121368	      0.0191628
         8000      851.00000	      0.1063750	      0.0118363	      0.0176288
        16000     1832.00000	      0.1145000	      0.0118281	      0.0165189
        32000     3797.00000	      0.1186563	      0.0114384	      0.0149026
        64000     7937.00000	      0.1240156	      0.0112063	      0.0135594
        128000    16533.00000	      0.1291641	      0.0109835	      0.0122942
        256000    34421.00000	      0.1344570	      0.0107972	      0.0111413


 * Cotas: < n^1.8, n², n^2.2 >

 	- Cota subestimada: f(n) = n^1.8
 	- Cota ajusutada: g(n) = n² || Cte. = ______________
 	- Cota sobreestimada: h(n) = n^2.2

 - t(n) / f(n) cuando n -> infinito ---> infinito (divergente)
 - t(n) / g(n) cuando n -> infinito ---> Valor constante = Cte > 0
 - t(n) / h(n) cuando n -> infinito ---> 0 (convergente)


     # ORDENACIÓN POR MONTICULO. INICIALIZACIÓN DESCENDENTE :

            n           t(n)	         t(n)/n	   t(n)/n log n	     t(n)/n^1.2
          500       35.83000	      0.0716600	      0.0115309	      0.0206768
         1000       84.04100	      0.0840410	      0.0121662	      0.0211101
         2000      194.61500	      0.0973075	      0.0128021	      0.0212785
         4000      418.65000	      0.1046625	      0.0126190	      0.0199241
         8000      867.00000	      0.1083750	      0.0120588	      0.0179602
        16000     1838.00000	      0.1148750	      0.0118668	      0.0165730
        32000     3880.00000	      0.1212500	      0.0116884	      0.0152283
        64000     8165.00000	      0.1275781	      0.0115282	      0.0139489
        128000    16796.00000	      0.1312187	      0.0111583	      0.0124898
        256000    34910.00000	      0.1363672	      0.0109506	      0.0112996


  * Cotas: < n^1.8, n², n^2.2 >

  	- Cota subestimada: f(n) = n^1.8
  	- Cota ajusutada: g(n) = n² || Cte. = ______________
  	- Cota sobreestimada: h(n) = n^2.2

  - t(n) / f(n) cuando n -> infinito ---> infinito (divergente)
  - t(n) / g(n) cuando n -> infinito ---> Valor constante = Cte > 0
  - t(n) / h(n) cuando n -> infinito ---> 0 (convergente)


      # ORDENACIÓN POR MONTICULO. INICIALIZACIÓN ALEATORIA :

            n           t(n)	         t(n)/n	   t(n)/n log n	     t(n)/n^1.2
          500       51.71400	      0.1034280	      0.0166427	      0.0298431
         1000      110.38200	      0.1103820	      0.0159794	      0.0277267
         2000      237.39600	      0.1186980	      0.0156163	      0.0259560
         4000      502.00000	      0.1255000	      0.0151313	      0.0238909
         8000     1084.00000	      0.1355000	      0.0150770	      0.0224554
        16000     2323.00000	      0.1451875	      0.0149982	      0.0209462
        32000     4968.00000	      0.1552500	      0.0149660	      0.0194985
        64000    10710.00000	      0.1673438	      0.0151215	      0.0182967
        128000    23152.00000	      0.1808750	      0.0153808	      0.0172162
        256000    49471.00000	      0.1932461	      0.0155181	      0.0160126


   * Cotas: < n^1.8, n², n^2.2 >

   	- Cota subestimada: f(n) = n^1.8
   	- Cota ajusutada: g(n) = n² || Cte. = ______________
   	- Cota sobreestimada: h(n) = n^2.2

   - t(n) / f(n) cuando n -> infinito ---> infinito (divergente)
   - t(n) / g(n) cuando n -> infinito ---> Valor constante = Cte > 0
   - t(n) / h(n) cuando n -> infinito ---> 0 (convergente)





CONCLUSIÓN: